<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zerg.tiamat.mapper.SpecificationMapper">
  <resultMap id="BaseResultMap" type="com.zerg.tiamat.dao.Specification">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="statement_id" jdbcType="INTEGER" property="statementId" />
    <result column="market" jdbcType="INTEGER" property="market" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="interval" jdbcType="INTEGER" property="interval" />
    <result column="type" jdbcType="TINYINT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, created_at, updated_at, created_by, updated_by, deleted, statement_id, market, 
    symbol, interval, type
  </sql>
  <select id="selectByExample" parameterType="com.zerg.tiamat.dao.SpecificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from specification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from specification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zerg.tiamat.dao.SpecificationExample">
    delete from specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zerg.tiamat.dao.Specification">
    insert into specification (id, created_at, updated_at, 
      created_by, updated_by, deleted, 
      statement_id, market, symbol, 
      interval, type)
    values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER}, #{deleted,jdbcType=TINYINT}, 
      #{statementId,jdbcType=INTEGER}, #{market,jdbcType=INTEGER}, #{symbol,jdbcType=VARCHAR}, 
      #{interval,jdbcType=INTEGER}, #{type,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zerg.tiamat.dao.Specification">
    insert into specification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="statementId != null">
        statement_id,
      </if>
      <if test="market != null">
        market,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="interval != null">
        interval,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="statementId != null">
        #{statementId,jdbcType=INTEGER},
      </if>
      <if test="market != null">
        #{market,jdbcType=INTEGER},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="interval != null">
        #{interval,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zerg.tiamat.dao.SpecificationExample" resultType="java.lang.Long">
    select count(*) from specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update specification
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.statementId != null">
        statement_id = #{record.statementId,jdbcType=INTEGER},
      </if>
      <if test="record.market != null">
        market = #{record.market,jdbcType=INTEGER},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.interval != null">
        interval = #{record.interval,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update specification
    set id = #{record.id,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=TINYINT},
      statement_id = #{record.statementId,jdbcType=INTEGER},
      market = #{record.market,jdbcType=INTEGER},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      interval = #{record.interval,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zerg.tiamat.dao.Specification">
    update specification
    <set>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="statementId != null">
        statement_id = #{statementId,jdbcType=INTEGER},
      </if>
      <if test="market != null">
        market = #{market,jdbcType=INTEGER},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="interval != null">
        interval = #{interval,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zerg.tiamat.dao.Specification">
    update specification
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=TINYINT},
      statement_id = #{statementId,jdbcType=INTEGER},
      market = #{market,jdbcType=INTEGER},
      symbol = #{symbol,jdbcType=VARCHAR},
      interval = #{interval,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>